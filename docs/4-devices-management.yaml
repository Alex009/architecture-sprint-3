openapi: 3.0.3
info:
  title: Device Management Service API
  description: API для управления устройствами в системе умного дома.
  version: 1.0.0
servers:
  - url: http://devices.smart-home.local
    description: Основной сервер API

paths:
  /devices:
    get:
      summary: Получить список всех устройств пользователя
      description: Возвращает список всех устройств, зарегистрированных в системе, доступных текущему пользователю.
      tags:
        - Devices
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный запрос, возвращает список устройств.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
              examples:
                example:
                  $ref: '#/components/examples/DevicesListExample'
        '401':
          description: Не авторизован.

    post:
      summary: Зарегистрировать новое устройство
      description: Добавляет новое устройство в систему и отправляет запрос на регистрацию в сервис интеграции устройств.
      tags:
        - Devices
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDevice'
            examples:
              example:
                $ref: '#/components/examples/NewDeviceExample'
      responses:
        '201':
          description: Устройство успешно зарегистрировано и отправлен запрос на интеграцию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
              examples:
                example:
                  $ref: '#/components/examples/DeviceExample'
        '400':
          description: Некорректные данные.
        '409':
          description: Конфликт, устройство с таким идентификатором уже существует.

  /devices/{deviceId}:
    get:
      summary: Получить информацию об устройстве
      description: Возвращает информацию о конкретном устройстве, включая список настроек и датчиков.
      tags:
        - Devices
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Уникальный идентификатор устройства
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос, возвращает данные устройства.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetail'
              examples:
                example:
                  $ref: '#/components/examples/DeviceDetailExample'
        '403':
          description: Доступ запрещен.
        '404':
          description: Устройство не найдено.

    delete:
      summary: Удалить устройство
      description: Удаляет устройство из системы и отменяет его регистрацию в сервисе интеграции устройств.
      tags:
        - Devices
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Уникальный идентификатор устройства
          schema:
            type: string
      responses:
        '204':
          description: Устройство успешно удалено.
        '403':
          description: Доступ запрещен.
        '404':
          description: Устройство не найдено.

  /devices/{deviceId}/settings:
    get:
      summary: Получить настройки устройства
      description: Возвращает список настроек устройства.
      tags:
        - Device Settings
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Уникальный идентификатор устройства
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос, возвращает список настроек устройства.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceSetting'
              examples:
                example:
                  $ref: '#/components/examples/DeviceSettingsExample'
        '403':
          description: Доступ запрещен.
        '404':
          description: Устройство не найдено.

    post:
      summary: Обновить настройки устройства
      description: Обновляет настройки конкретного устройства.
      tags:
        - Device Settings
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Уникальный идентификатор устройства
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceSetting'
            examples:
              example:
                $ref: '#/components/examples/UpdateDeviceSettingExample'
      responses:
        '200':
          description: Настройки устройства успешно обновлены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSetting'
              examples:
                example:
                  $ref: '#/components/examples/DeviceSettingExample'
        '403':
          description: Доступ запрещен.
        '404':
          description: Устройство не найдено.

  /devices/{deviceId}/command:
    post:
      summary: Отправить команду устройству
      description: Отправляет команду "включить" или "выключить" устройству через сервис интеграции устройств.
      tags:
        - Device Commands
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          description: Уникальный идентификатор устройства
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
            examples:
              example:
                $ref: '#/components/examples/DeviceCommandExample'
      responses:
        '202':
          description: Команда успешно отправлена.
        '403':
          description: Доступ запрещен.
        '404':
          description: Устройство не найдено.

  /service/validate-access:
    post:
      summary: Проверить доступ пользователя к устройству
      description: Проверяет, есть ли у пользователя доступ к указанному устройству. Этот запрос используется для межсервисного взаимодействия.
      tags:
        - Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessCheckRequest'
            examples:
              example:
                $ref: '#/components/examples/AccessCheckRequestExample'
      responses:
        '200':
          description: Успешная проверка доступа.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessCheckResponse'
              examples:
                example:
                  $ref: '#/components/examples/AccessCheckResponseExample'
        '404':
          description: Устройство или пользователь не найдены.
        '403':
          description: Доступ запрещен.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Device:
      type: object
      properties:
        device_id:
          type: string
          description: Уникальный идентификатор устройства
        device_name:
          type: string
          description: Имя устройства
        home_id:
          type: string
          description: Идентификатор дома, к которому привязано устройство
      required:
        - device_id
        - device_name
        - home_id

    DeviceDetail:
      type: object
      properties:
        device_id:
          type: string
          description: Уникальный идентификатор устройства
        device_name:
          type: string
          description: Имя устройства
        home_id:
          type: string
          description: Идентификатор дома, к которому привязано устройство
        settings:
          type: array
          items:
            $ref: '#/components/schemas/DeviceSetting'
          description: Список настроек устройства
        sensors:
          type: array
          items:
            $ref: '#/components/schemas/DeviceSensor'
          description: Список датчиков устройства
      required:
        - device_id
        - device_name
        - home_id
        - settings
        - sensors

    NewDevice:
      type: object
      properties:
        device_name:
          type: string
          description: Имя устройства
        device_type:
          type: string
          description: Тип устройства (не отображается пользователю)
        home_id:
          type: string
          description: Идентификатор дома, к которому будет привязано устройство
        metadata:
          type: object
          additionalProperties: true
          description: Дополнительные данные для регистрации устройства в сервисе интеграции
      required:
        - device_name
        - device_type
        - home_id
        - metadata

    DeviceSetting:
      type: object
      properties:
        setting_id:
          type: string
          description: Уникальный идентификатор настройки
        setting_name:
          type: string
          description: Имя настройки
        setting_value:
          type: string
          description: Значение настройки
      required:
        - setting_id
        - setting_name
        - setting_value

    DeviceSensor:
      type: object
      properties:
        sensor_id:
          type: string
          description: Уникальный идентификатор датчика
        sensor_name:
          type: string
          description: Имя датчика
      required:
        - sensor_id
        - sensor_name

    DeviceCommand:
      type: object
      properties:
        command:
          type: string
          enum:
            - turn-on
            - turn-off
          description: Тип команды
      required:
        - command

    UpdateDeviceSetting:
      type: object
      properties:
        setting_name:
          type: string
          description: Имя настройки
        setting_value:
          type: string
          description: Значение настройки
      required:
        - setting_name
        - setting_value

    AccessCheckRequest:
      type: object
      properties:
        user_id:
          type: string
          description: Идентификатор пользователя
        device_id:
          type: string
          description: Идентификатор устройства
      required:
        - user_id
        - device_id

    AccessCheckResponse:
      type: object
      properties:
        has_access:
          type: boolean
          description: Флаг наличия доступа
      required:
        - has_access

  examples:
    DevicesListExample:
      summary: Пример списка устройств
      value:
        - device_id: "123e4567-e89b-12d3-a456-426614174000"
          device_name: "Умный термостат"
          home_id: "123e4567-e89b-12d3-home-426614174000"
        - device_id: "123e4567-e89b-12d3-a456-426614174001"
          device_name: "Датчик дыма"
          home_id: "123e4567-e89b-12d3-home-426614174000"

    DeviceExample:
      summary: Пример устройства
      value:
        device_id: "123e4567-e89b-12d3-a456-426614174000"
        device_name: "Умный термостат"
        home_id: "123e4567-e89b-12d3-home-426614174000"

    DeviceDetailExample:
      summary: Пример детальной информации об устройстве
      value:
        device_id: "123e4567-e89b-12d3-a456-426614174000"
        device_name: "Умный термостат"
        home_id: "123e4567-e89b-12d3-home-426614174000"
        settings:
          - setting_id: "123e4567-e89b-12d3-set1-426614174000"
            setting_name: "Температура"
            setting_value: "22"
          - setting_id: "123e4567-e89b-12d3-set2-426614174000"
            setting_name: "Режим работы"
            setting_value: "Автоматический"
        sensors:
          - sensor_id: "123e4567-e89b-12d3-sen1-426614174000"
            sensor_name: "Датчик температуры"
          - sensor_id: "123e4567-e89b-12d3-sen2-426614174000"
            sensor_name: "Датчик влажности"

    NewDeviceExample:
      summary: Пример регистрации нового устройства
      value:
        device_name: "Умный термостат"
        device_type: "thermostat"
        home_id: "123e4567-e89b-12d3-home-426614174000"
        metadata:
          manufacturer: "SmartHome Inc."
          model: "T-1000"
          serial_number: "SN1234567890"

    DeviceSettingsExample:
      summary: Пример настроек устройства
      value:
        - setting_id: "123e4567-e89b-12d3-set1-426614174000"
          setting_name: "Температура"
          setting_value: "22"
        - setting_id: "123e4567-e89b-12d3-set2-426614174000"
          setting_name: "Режим работы"
          setting_value: "Автоматический"

    UpdateDeviceSettingExample:
      summary: Пример обновления настройки устройства
      value:
        setting_name: "Температура"
        setting_value: "25"

    DeviceSettingExample:
      summary: Пример настройки устройства
      value:
        setting_id: "123e4567-e89b-12d3-set1-426614174000"
        setting_name: "Температура"
        setting_value: "25"

    DeviceCommandExample:
      summary: Пример команды для устройства
      value:
        command: "turn-on"

    AccessCheckRequestExample:
      summary: Пример запроса на проверку доступа
      value:
        user_id: "123e4567-e89b-12d3-usr1-426614174000"
        device_id: "123e4567-e89b-12d3-a456-426614174000"

    AccessCheckResponseExample:
      summary: Пример ответа на проверку доступа
      value:
        has_access: true
